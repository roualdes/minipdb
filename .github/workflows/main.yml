name: MiniPDB

on:
  push:
    branches:
      - 'develop'
      - 'main'
    tags:
      - '**'
  pull_request:
  workflow_dispatch:
    inputs:
      cmdstan-version:
        description: 'Version to test'
        required: false
        default: ''

jobs:
  get-cmdstan-version:
    # get the latest cmdstan version to use as part of the cache key
    name: grab version
    runs-on: ubuntu-latest
    steps:
      - name: Get CmdStan version
        id: check-cmdstan
        run: |
            if [[ "${{ github.event.inputs.cmdstan-version }}" != "" ]]; then
              echo "version=${{ github.event.inputs.cmdstan-version }}" >> $GITHUB_OUTPUT
            else
                python -c 'import requests;print("version="+requests.get("https://api.github.com/repos/stan-dev/cmdstan/releases/latest").json()["tag_name"][1:])' >> $GITHUB_OUTPUT
            fi
    outputs:
      version: ${{ steps.check-cmdstan.outputs.version }}

  minipdb:
    needs: get-cmdstan-version
    name: tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out github
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (python)
        run: |
          python -m pip install --upgrade pip pytest numpy pandas cmdstanpy

      - name: Install minipdb
        run: pip install .

      - name: CmdStan installation cacheing
        uses: actions/cache@v3
        with:
          path: ~/.cmdstan
          key: ${{ runner.os }}-cmdstan-${{ needs.get-cmdstan-version.outputs.version }}-${{ hashFiles('**/install_cmdstan.py') }}

      - name: Install CmdStan
        run: |
          install_cmdstan -h
          install_cxx_toolchain -h
          python -c "import cmdstanpy; cmdstanpy.install_cmdstan(version='${{ needs.get-cmdstan-version.outputs.version }}', cores=2)"

      - name: Run tests
        run: |
          pytest -v
